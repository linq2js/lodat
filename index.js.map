{"version":3,"sources":["src/index.js"],"names":["noop","memoryStorage","storage","getItem","key","callback","setItem","value","removeItem","multiSet","entries","i","length","multiGet","keys","map","multiRemove","clear","getAll","lodat","name","debounce","context","createStorageWrapper","schemas","promises","executionScopes","writes","schema","flush","onChange","createEventSource","subscribe","clearTimeout","flushTimerId","flushWrites","subscription","add","exec","generator","resolved","promiseResolve","returnValue","result","handleGenerator","schemasReady","__allSchemaLoadingPromise","Command","Promise","resolve","s","Schema","Set","loadAllSchemas","writeSchemas","writeData","Object","join","schemaListString","get","schemaNames","split","all","schemaName","loadSchema","force","internalFlush","actionsByKey","action","set","remove","push","setTimeout","dbName","prefix","multiMerge","wrapLocalStorage","Array","isArray","collectValues","maxLength","iterator","values","next","payload","done","isPromiseLike","then","command","doneCount","results","commands","forEach","index","fork","undefined","constructor","assign","obj","exist","has","idListString","Keys","entityArray","entityMap","id","entity","writeSchema","create","args","update","props","count","from","actions","generateId","Entity","event","type","notify","writeEntity","JSON","stringify","_props","hasChange","some","_schema","input","predicate","entityKeys","options","query","size","arguments","removedKeys","item","Error","delete","getStorageKeyFromEntityKey","yieldAll","processedKeys","filter","includes","unloadedKeys","loadEntities","loadingPromises","unloadedEntityKeys","loadEntitiesPromise","entityData","entityId","parse","Math","random","Date","now","toString","firstChar","charAt","lastChar","replace","defineProperties","writable","toJSON","listeners","newListeners","removedListeners","listener","isActive","container","indexOf","splice"],"mappings":"AAAA,MAAMA,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,OAAO,MAAMC,aAAa,GAAI,YAAY;AACxC,MAAIC,OAAO,GAAG,EAAd;AAEA,SAAO;AACLC,IAAAA,OAAO,CAACC,GAAD,EAAMC,QAAN,EAAgB;AACrBA,MAAAA,QAAQ,CAACH,OAAO,CAACE,GAAD,CAAR,CAAR;AACD,KAHI;;AAILE,IAAAA,OAAO,CAACF,GAAD,EAAMG,KAAN,EAAaF,QAAb,EAAuB;AAC5BH,MAAAA,OAAO,CAACE,GAAD,CAAP,GAAeG,KAAf;AACAF,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KAPI;;AAQLG,IAAAA,UAAU,CAACJ,GAAD,EAAMC,QAAN,EAAgB;AACxB,aAAOH,OAAO,CAACE,GAAD,CAAd;AACAC,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KAXI;;AAYLI,IAAAA,QAAQ,CAACC,OAAD,EAAUL,QAAV,EAAoB;AAC1B,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,cAAM,CAACP,GAAD,EAAMG,KAAN,IAAeG,OAAO,CAACC,CAAD,CAA5B;AACAT,QAAAA,OAAO,CAACE,GAAD,CAAP,GAAeG,KAAf;AACD;;AACDF,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KAlBI;;AAmBLQ,IAAAA,QAAQ,CAACC,IAAD,EAAOT,QAAP,EAAiB;AACvB,aAAOA,QAAQ,CAACS,IAAI,CAACC,GAAL,CAAUX,GAAD,IAASF,OAAO,CAACE,GAAD,CAAzB,CAAD,CAAf;AACD,KArBI;;AAsBLY,IAAAA,WAAW,CAACF,IAAD,EAAOT,QAAP,EAAiB;AAC1B,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,IAAI,CAACF,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,eAAOT,OAAO,CAACY,IAAI,CAACH,CAAD,CAAL,CAAd;AACD;;AACDN,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KA3BI;;AA4BLY,IAAAA,KAAK,GAAG;AACNf,MAAAA,OAAO,GAAG,EAAV;AACD,KA9BI;;AA+BLgB,IAAAA,MAAM,GAAG;AACP,aAAOhB,OAAP;AACD;;AAjCI,GAAP;AAmCD,CAtC4B,EAAtB;AAwCP,eAAe,SAASiB,KAAT,CAAe;AAC5BC,EAAAA,IAAI,GAAG,EADqB;AAE5BC,EAAAA,QAAQ,GAAG,CAFiB;AAG5BnB,EAAAA,OAAO,GAAGD;AAHkB,IAI1B,EAJW,EAIP;AACN,QAAMqB,OAAO,GAAG;AACdD,IAAAA,QADc;AAEdnB,IAAAA,OAAO,EAAEqB,oBAAoB,CAACH,IAAD,EAAOlB,OAAP,CAFf;AAGdsB,IAAAA,OAAO,EAAE,EAHK;AAIdC,IAAAA,QAAQ,EAAE,EAJI;AAKdC,IAAAA,eAAe,EAAE,CALH;AAMdC,IAAAA,MAAM,EAAE,EANM;AAOdC,IAAAA,MAPc;AAQdC,IAAAA,KARc;AASdC,IAAAA,QAAQ,EAAEC,iBAAiB,EATb;AAUdC,IAAAA;AAVc,GAAhB;;AAaA,WAASH,KAAT,GAAiB;AACfI,IAAAA,YAAY,CAACX,OAAO,CAACY,YAAT,CAAZ;AACA,WAAOC,WAAW,CAACb,OAAD,EAAU,IAAV,CAAlB;AACD;;AAED,WAASU,SAAT,CAAmBI,YAAnB,EAAiC;AAC/B,WAAOd,OAAO,CAACQ,QAAR,CAAiBO,GAAjB,CAAqBD,YAArB,CAAP;AACD;;AAED,WAASE,IAAT,CAAcC,SAAd,EAAyB;AACvB,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,cAAJ;AACA,QAAIC,WAAJ;;AAEA,aAASrC,QAAT,CAAkBsC,MAAlB,EAA0B;AACxBH,MAAAA,QAAQ,GAAG,IAAX;AACAE,MAAAA,WAAW,GAAGC,MAAd;AACAF,MAAAA,cAAc,IAAIA,cAAc,CAACE,MAAD,CAAhC;AACD;;AAEDC,IAAAA,eAAe,CAAC;AACdvC,MAAAA,QADc;AAEdkC,MAAAA,SAAS,EAAEjB,OAAO,CAACuB,YAAR,GACPN,SADO,GAEP,aAAa;AACX,cAAMjB,OAAO,CAACwB,yBAAd;AACA,eAAO,MAAM,IAAIC,OAAJ,CAAYR,SAAZ,CAAb;AACD,OAPS;AAQdjB,MAAAA;AARc,KAAD,CAAf;AAWA,QAAIkB,QAAJ,EAAc,OAAOE,WAAP;AACd,WAAO,IAAIM,OAAJ,CAAaC,OAAD,IAAcR,cAAc,GAAGQ,OAA3C,CAAP;AACD;;AAED,WAASrB,MAAT,CAAgBR,IAAhB,EAAsB;AACpB,QAAI8B,CAAC,GAAG5B,OAAO,CAACE,OAAR,CAAgBJ,IAAhB,CAAR;;AACA,QAAI,CAAC8B,CAAL,EAAQ;AACNA,MAAAA,CAAC,GAAG,IAAIC,MAAJ,CAAW7B,OAAX,EAAoBF,IAApB,EAA0B,IAAIgC,GAAJ,EAA1B,CAAJ;AACA9B,MAAAA,OAAO,CAACE,OAAR,CAAgBJ,IAAhB,IAAwB8B,CAAxB;AACD;;AACD,WAAOA,CAAP;AACD;;AAED5B,EAAAA,OAAO,CAACwB,yBAAR,GAAoCO,cAAc,CAAC/B,OAAD,CAAlD;AAEA,SAAO;AACLgB,IAAAA;AADK,GAAP;AAGD;;AAED,SAASgB,YAAT,CAAsBhC,OAAtB,EAA+B;AAC7BiC,EAAAA,SAAS,CAACjC,OAAD,EAAU,CACjB,KADiB,EAEjB,SAFiB,EAGjB,MAAMkC,MAAM,CAAC1C,IAAP,CAAYQ,OAAO,CAACE,OAApB,EAA6BiC,IAA7B,CAAkC,GAAlC,CAHW,CAAV,CAAT;AAKD;;AAED,eAAeJ,cAAf,CAA8B/B,OAA9B,EAAuC;AACrC,QAAMoC,gBAAgB,GAAG,MAAMpC,OAAO,CAACpB,OAAR,CAAgByD,GAAhB,CAAoB,SAApB,CAA/B;AACA,QAAMC,WAAW,GAAGF,gBAAgB,GAAGA,gBAAgB,CAACG,KAAjB,CAAuB,GAAvB,CAAH,GAAiC,EAArE;AACA,QAAMb,OAAO,CAACc,GAAR,CACJF,WAAW,CAAC7C,GAAZ,CAAiBgD,UAAD,IAAgBC,UAAU,CAAC1C,OAAD,EAAUyC,UAAV,CAA1C,CADI,CAAN;AAGAzC,EAAAA,OAAO,CAACuB,YAAR,GAAuB,IAAvB;AACD;;AAED,SAASV,WAAT,CAAqBb,OAArB,EAA8B2C,KAA9B,EAAqC;AACnC,WAASC,aAAT,GAAyB;AACvB,QAAI,CAAC5C,OAAO,CAACK,MAAT,IAAmB,CAACL,OAAO,CAACK,MAAR,CAAef,MAAvC,EAA+C;AAC/C,UAAMe,MAAM,GAAGL,OAAO,CAACK,MAAvB;AACA,UAAMwC,YAAY,GAAG,EAArB;;AACA,SAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,MAAM,CAACf,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,YAAM,CAACyD,MAAD,EAAShE,GAAT,EAAcG,KAAd,IAAuBoB,MAAM,CAAChB,CAAD,CAAnC;AACAwD,MAAAA,YAAY,CAAC/D,GAAD,CAAZ,GAAoB,CAACgE,MAAD,EAAShE,GAAT,EAAcG,KAAd,CAApB;AACD;;AACD,UAAM8D,GAAG,GAAG,EAAZ;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMxD,IAAI,GAAG0C,MAAM,CAAC1C,IAAP,CAAYqD,YAAZ,CAAb;;AACA,SAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,IAAI,CAACF,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAM,CAACyD,MAAD,EAAShE,GAAT,EAAcG,KAAd,IAAuB4D,YAAY,CAACrD,IAAI,CAACH,CAAD,CAAL,CAAzC;;AACA,UAAIyD,MAAM,KAAK,KAAf,EAAsB;AACpBC,QAAAA,GAAG,CAACE,IAAJ,CAAS,CAACnE,GAAD,EAAM,OAAOG,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,EAAnC,GAAwCA,KAA9C,CAAT;AACD,OAFD,MAEO;AACL+D,QAAAA,MAAM,CAACC,IAAP,CAAYnE,GAAZ;AACD;AACF;;AACDkB,IAAAA,OAAO,CAACpB,OAAR,CAAgBmE,GAAhB,CAAoBA,GAApB;AACA/C,IAAAA,OAAO,CAACpB,OAAR,CAAgBoE,MAAhB,CAAuBA,MAAvB;AACA3C,IAAAA,MAAM,CAACf,MAAP,GAAgB,CAAhB;AACD;;AAED,MAAIqD,KAAK,IAAI,CAAC3C,OAAO,CAACD,QAAtB,EAAgC;AAC9B6C,IAAAA,aAAa;AACd,GAFD,MAEO;AACLjC,IAAAA,YAAY,CAACX,OAAO,CAACY,YAAT,CAAZ;AACAZ,IAAAA,OAAO,CAACY,YAAR,GAAuBsC,UAAU,CAACN,aAAD,EAAgB5C,OAAO,CAACD,QAAxB,CAAjC;AACD;AACF;;AAED,SAASE,oBAAT,CAA8BkD,MAA9B,EAAsCvE,OAAtC,EAA+C;AAC7C,QAAMwE,MAAM,GAAGD,MAAM,GAAI,OAAMA,MAAO,GAAjB,GAAsB,MAA3C;;AACA,MAAIvE,OAAO,KAAKD,aAAhB,EAA+B;AAC7B;AACA,QAAI,OAAOC,OAAO,CAACyE,UAAf,KAA8B,UAAlC,EAA8C,CAC5C;AACD,KAFD,CAGA;AAHA,SAIK,IAAI,CAACzE,OAAO,CAACO,QAAb,EAAuB;AAC1BP,QAAAA,OAAO,GAAG0E,gBAAgB,CAAC1E,OAAD,CAA1B;AACD;AACF;;AAED,SAAO;AACLyD,IAAAA,GAAG,CAACvD,GAAD,EAAM;AACP,aAAO,IAAI4C,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAI4B,KAAK,CAACC,OAAN,CAAc1E,GAAd,CAAJ,EAAwB;AACtBF,UAAAA,OAAO,CAACW,QAAR,CACET,GAAG,CAACW,GAAJ,CAASX,GAAD,IAAU,GAAEsE,MAAO,GAAEtE,GAAI,EAAjC,CADF,EAEE6C,OAFF;AAID,SALD,MAKO;AACL/C,UAAAA,OAAO,CAACC,OAAR,CAAiB,GAAEuE,MAAO,GAAEtE,GAAI,EAAhC,EAAmC6C,OAAnC;AACD;AACF,OATM,CAAP;AAUD,KAZI;;AAaLqB,IAAAA,MAAM,CAAClE,GAAD,EAAM;AACV,aAAO,IAAI4C,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAI4B,KAAK,CAACC,OAAN,CAAc1E,GAAd,CAAJ,EAAwB;AACtBF,UAAAA,OAAO,CAACc,WAAR,CAAqB,GAAE0D,MAAO,GAAEtE,GAAI,EAApC,EAAuC6C,OAAvC;AACD,SAFD,MAEO;AACL/C,UAAAA,OAAO,CAACM,UAAR,CAAoB,GAAEkE,MAAO,GAAEtE,GAAI,EAAnC,EAAsC6C,OAAtC;AACD;AACF,OANM,CAAP;AAOD,KArBI;;AAsBLoB,IAAAA,GAAG,CAACjE,GAAD,EAAMG,KAAN,EAAa;AACd,aAAO,IAAIyC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAI4B,KAAK,CAACC,OAAN,CAAc1E,GAAd,CAAJ,EAAwB;AACtBF,UAAAA,OAAO,CAACO,QAAR,CACEL,GAAG,CAACW,GAAJ,CAAQ,CAAC,CAACX,GAAD,EAAMG,KAAN,CAAD,KAAkB,CAAE,GAAEmE,MAAO,GAAEtE,GAAI,EAAjB,EAAoBG,KAApB,CAA1B,CADF,EAEE0C,OAFF;AAID,SALD,MAKO;AACL/C,UAAAA,OAAO,CAACI,OAAR,CAAiB,GAAEoE,MAAO,GAAEtE,GAAI,EAAhC,EAAmCG,KAAnC,EAA0C0C,OAA1C;AACD;AACF,OATM,CAAP;AAUD;;AAjCI,GAAP;AAmCD;;AAED,SAAS2B,gBAAT,CAA0B1E,OAA1B,EAAmC;AACjC,SAAO;AACLC,IAAAA,OAAO,CAACC,GAAD,EAAMC,QAAN,EAAgB;AACrBA,MAAAA,QAAQ,CAACH,OAAO,CAACC,OAAR,CAAgBC,GAAhB,CAAD,CAAR;AACD,KAHI;;AAILE,IAAAA,OAAO,CAACF,GAAD,EAAMG,KAAN,EAAaF,QAAb,EAAuB;AAC5BH,MAAAA,OAAO,CAACI,OAAR,CAAgBF,GAAhB,EAAqBG,KAArB;AACAF,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KAPI;;AAQLG,IAAAA,UAAU,CAACJ,GAAD,EAAMC,QAAN,EAAgB;AACxBH,MAAAA,OAAO,CAACM,UAAR,CAAmBJ,GAAnB;AACAC,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KAXI;;AAYLI,IAAAA,QAAQ,CAACC,OAAD,EAAUL,QAAV,EAAoB;AAC1B,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,cAAM,CAACP,GAAD,EAAMG,KAAN,IAAeG,OAAO,CAACC,CAAD,CAA5B;AACAT,QAAAA,OAAO,CAACI,OAAR,CAAgBF,GAAhB,EAAqBG,KAArB;AACD;;AACDF,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KAlBI;;AAmBLQ,IAAAA,QAAQ,CAACC,IAAD,EAAOT,QAAP,EAAiB;AACvB,aAAOA,QAAQ,CAACS,IAAI,CAACC,GAAL,CAAUX,GAAD,IAASF,OAAO,CAACC,OAAR,CAAgBC,GAAhB,CAAlB,CAAD,CAAf;AACD,KArBI;;AAsBLY,IAAAA,WAAW,CAACF,IAAD,EAAOT,QAAP,EAAiB;AAC1B,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,IAAI,CAACF,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCT,QAAAA,OAAO,CAACM,UAAR,CAAmBM,IAAI,CAACH,CAAD,CAAvB;AACD;;AACDN,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD;;AA3BI,GAAP;AA6BD;;AAED,OAAO,SAASuC,eAAT,CAAyB;AAC9BtB,EAAAA,OAD8B;AAE9BiB,EAAAA,SAF8B;AAG9BwC,EAAAA,aAH8B;AAI9B1E,EAAAA,QAAQ,GAAGL,IAJmB;AAK9BgF,EAAAA;AAL8B,IAM5B,EANG,EAMC;AACN,MAAIC,QAAQ,GAAG1C,SAAS,CAACjB,OAAD,CAAxB;AACA,QAAM4D,MAAM,GAAG,EAAf;;AACA,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,IAAAA,QAAQ,GAAGA,QAAQ,CAAC3D,OAAD,CAAnB;AACD;;AAED,WAAS6D,IAAT,CAAcC,OAAd,EAAuB;AACrB,QAAI;AACF9D,MAAAA,OAAO,CAACI,eAAR;AACA,YAAMiB,MAAM,GAAGsC,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAf;;AACA,UAAIzC,MAAM,CAAC0C,IAAX,EAAiB;AACf,eAAOhF,QAAQ,CAAC0E,aAAa,GAAGG,MAAH,GAAYvC,MAAM,CAACpC,KAAjC,CAAf;AACD;;AAED,UAAI+E,aAAa,CAAC3C,MAAM,CAACpC,KAAR,CAAjB,EAAiC;AAC/B,eAAOoC,MAAM,CAACpC,KAAP,CAAagF,IAAb,CAAkBJ,IAAlB,CAAP;AACD;;AAED,UAAIxC,MAAM,CAACpC,KAAP,YAAwBwC,OAA5B,EAAqC;AACnC,cAAMyC,OAAO,GAAG7C,MAAM,CAACpC,KAAvB;AACA,eAAOqC,eAAe,CAAC;AACrBtB,UAAAA,OADqB;AAErB,aAAGkE,OAFkB;;AAGrBnF,UAAAA,QAAQ,CAACsC,MAAD,EAAS;AACf,mBAAOwC,IAAI,CAACK,OAAO,CAACzE,GAAR,GAAcyE,OAAO,CAACzE,GAAR,CAAY4B,MAAZ,CAAd,GAAoCA,MAArC,CAAX;AACD;;AALoB,SAAD,CAAtB;AAOD;;AAED,UAAIkC,KAAK,CAACC,OAAN,CAAcnC,MAAM,CAACpC,KAArB,KAA+BoC,MAAM,CAACpC,KAAP,CAAa,CAAb,aAA2BwC,OAA9D,EAAuE;AACrE,YAAI0C,SAAS,GAAG,CAAhB;AACA,cAAMC,OAAO,GAAG,EAAhB;AACA,cAAMC,QAAQ,GAAGhD,MAAM,CAACpC,KAAxB;AACAoF,QAAAA,QAAQ,CAACC,OAAT,CAAiB,CAACJ,OAAD,EAAUK,KAAV,KAAoB;AACnC,mBAASxF,QAAT,CAAkBsC,MAAlB,EAA0B;AACxB+C,YAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBlD,MAAjB;AACA8C,YAAAA,SAAS;;AACT,gBAAIA,SAAS,IAAIE,QAAQ,CAAC/E,MAA1B,EAAkC;AAChCuE,cAAAA,IAAI,CAACK,OAAO,CAACzE,GAAR,GAAcyE,OAAO,CAACzE,GAAR,CAAY2E,OAAZ,CAAd,GAAqCA,OAAtC,CAAJ;AACD;AACF;;AACD,cAAIF,OAAO,CAACM,IAAZ,EAAkB;AAChBlD,YAAAA,eAAe,CAAC;AAAEtB,cAAAA,OAAF;AAAW,iBAAGkE;AAAd,aAAD,CAAf;AACAnF,YAAAA,QAAQ,CAAC0F,SAAD,CAAR;AACD,WAHD,MAGO;AACLnD,YAAAA,eAAe,CAAC;AAAEtB,cAAAA,OAAF;AAAW,iBAAGkE,OAAd;AAAuBnF,cAAAA;AAAvB,aAAD,CAAf;AACD;AACF,SAdD;AAeA;AACD;;AAED,UAAI0E,aAAJ,EAAmB;AACjBG,QAAAA,MAAM,CAACX,IAAP,CAAY5B,MAAM,CAACpC,KAAnB;;AACA,YAAIyE,SAAS,IAAIE,MAAM,CAACtE,MAAP,IAAiBoE,SAAlC,EAA6C;AAC3C,iBAAO3E,QAAQ,CAAC6E,MAAD,CAAf;AACD;AACF;;AAED,aAAOC,IAAI,CAACxC,MAAM,CAACpC,KAAR,CAAX;AACD,KApDD,SAoDU;AACRe,MAAAA,OAAO,CAACI,eAAR;;AACA,UAAI,CAACJ,OAAO,CAACI,eAAb,EAA8B;AAC5BS,QAAAA,WAAW,CAACb,OAAD,CAAX;AACD;AACF;AACF;;AAED,MAAI2D,QAAQ,IAAI,OAAOA,QAAQ,CAACE,IAAhB,KAAyB,UAAzC,EAAqD;AACnD,WAAOA,IAAI,EAAX;AACD;;AACD,SAAO9E,QAAQ,CAAC4E,QAAD,CAAf;AACD;AAED,OAAO,MAAMlC,OAAN,CAAc;AACnBiD,EAAAA,WAAW,CAACzD,SAAD,EAAY;AAAEuD,IAAAA,IAAF;AAAQf,IAAAA,aAAR;AAAuBC,IAAAA,SAAvB;AAAkCjE,IAAAA;AAAlC,MAA0C,EAAtD,EAA0D;AACnEyC,IAAAA,MAAM,CAACyC,MAAP,CAAc,IAAd,EAAoB;AAAE1D,MAAAA,SAAF;AAAauD,MAAAA,IAAb;AAAmBf,MAAAA,aAAnB;AAAkCC,MAAAA,SAAlC;AAA6CjE,MAAAA;AAA7C,KAApB;AACD;;AAHkB;;AAMrB,SAASuE,aAAT,CAAuBY,GAAvB,EAA4B;AAC1B,SAAOA,GAAG,IAAI,OAAOA,GAAG,CAACX,IAAX,KAAoB,UAAlC;AACD;;AAED,SAASY,KAAT,CAAepC,UAAf,EAA2B3D,GAA3B,EAAgC;AAC9B,SAAO,IAAI2C,OAAJ,CAAY,WAAWzB,OAAX,EAAoB;AACrC,UAAMM,MAAM,GAAGN,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,CAAf;AACA,QAAI,CAACnC,MAAL,EAAa,OAAO,KAAP;AACb,WAAOA,MAAM,CAACd,IAAP,CAAYsF,GAAZ,CAAgBhG,GAAhB,CAAP;AACD,GAJM,CAAP;AAKD;;AAED,eAAe4D,UAAf,CAA0B1C,OAA1B,EAAmCyC,UAAnC,EAA+C;AAC7C,QAAMsC,YAAY,GAAG,MAAM/E,OAAO,CAACpB,OAAR,CAAgByD,GAAhB,CAAoBI,UAAU,GAAG,IAAjC,CAA3B;AACA,QAAMnC,MAAM,GAAG,IAAIuB,MAAJ,CACb7B,OADa,EAEbyC,UAFa,EAGb,IAAIX,GAAJ,CAAQiD,YAAY,GAAGA,YAAY,CAACxC,KAAb,CAAmB,GAAnB,CAAH,GAA6B,EAAjD,CAHa,CAAf;AAKAvC,EAAAA,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,IAA8BnC,MAA9B;AACA,SAAON,OAAO,CAACG,QAAR,CAAiBsC,UAAjB,CAAP;AACAT,EAAAA,YAAY,CAAChC,OAAD,CAAZ;AACA,SAAOM,MAAP;AACD;;AAED,MAAMuB,MAAN,CAAa;AACX6C,EAAAA,WAAW,CAAC1E,OAAD,EAAUF,IAAV,EAAgBkF,IAAhB,EAAsB;AAC/B,SAAKhF,OAAL,GAAeA,OAAf;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKN,IAAL,GAAYwF,IAAZ;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAK1E,QAAL,GAAgBC,iBAAiB,EAAjC;AACD;;AAEDC,EAAAA,SAAS,CAACI,YAAD,EAAe;AACtB,WAAO,KAAKN,QAAL,CAAcO,GAAd,CAAkBD,YAAlB,CAAP;AACD;;AAEDC,EAAAA,GAAG,CAACoE,EAAD,EAAKC,MAAL,EAAa;AACd,SAAK5F,IAAL,CAAUuB,GAAV,CAAcoE,EAAd;AACA,SAAKF,WAAL,CAAiBhC,IAAjB,CAAsBmC,MAAtB;AACA,SAAKF,SAAL,CAAeC,EAAf,IAAqBC,MAArB;AACAC,IAAAA,WAAW,CAAC,KAAKrF,OAAN,EAAe,IAAf,CAAX;AACD;;AAEDsF,EAAAA,MAAM,CAAC,GAAGC,IAAJ,EAAU;AACd,WAAOD,MAAM,CAAC,KAAKxF,IAAN,EAAY,GAAGyF,IAAf,CAAb;AACD;;AAEDvC,EAAAA,MAAM,CAAC,GAAGuC,IAAJ,EAAU;AACd,WAAOvC,MAAM,CAAC,KAAKlD,IAAN,EAAY,GAAGyF,IAAf,CAAb;AACD;;AAEDC,EAAAA,MAAM,CAACJ,MAAD,EAASK,KAAT,EAAgB;AACpB,WAAOD,MAAM,CAACJ,MAAD,EAASK,KAAT,CAAb;AACD;;AAEDjD,EAAAA,GAAG,CAAC,GAAG+C,IAAJ,EAAU;AACX,WAAO/C,GAAG,CAAC,KAAK1C,IAAN,EAAY,GAAGyF,IAAf,CAAV;AACD;;AAEDlD,EAAAA,GAAG,CAAC,GAAGkD,IAAJ,EAAU;AACX,WAAOH,MAAM,CAAC,KAAKtF,IAAN,EAAY,GAAGyF,IAAf,CAAb;AACD;;AAEDG,EAAAA,KAAK,CAAC,GAAGH,IAAJ,EAAU;AACb,WAAOG,KAAK,CAAC,KAAK5F,IAAN,EAAY,GAAGyF,IAAf,CAAZ;AACD;;AAEDV,EAAAA,KAAK,CAAC,GAAGU,IAAJ,EAAU;AACb,WAAOV,KAAK,CAAC,KAAK/E,IAAN,EAAY,GAAGyF,IAAf,CAAZ;AACD;;AA/CU;;AAkDb,SAASF,WAAT,CAAqBrF,OAArB,EAA8BM,MAA9B,EAAsC;AACpC2B,EAAAA,SAAS,CAACjC,OAAD,EAAU,CACjB,KADiB,EAEjBM,MAAM,CAACR,IAAP,GAAc,IAFG,EAGjB,MAAMyD,KAAK,CAACoC,IAAN,CAAWrF,MAAM,CAACd,IAAlB,EAAwB2C,IAAxB,CAA6B,GAA7B,CAHW,CAAV,CAAT;AAKD;;AAED,SAASF,SAAT,CAAmBjC,OAAnB,EAA4B,GAAG4F,OAA/B,EAAwC;AACtC5F,EAAAA,OAAO,CAACK,MAAR,CAAe4C,IAAf,CAAoB,GAAG2C,OAAvB;;AACA,MAAI,CAAC5F,OAAO,CAACI,eAAb,EAA8B;AAC5BS,IAAAA,WAAW,CAACb,OAAD,CAAX;AACD;AACF;;AAED,SAASsF,MAAT,CAAgB7C,UAAhB,EAA4BgD,KAA5B,EAAmC;AACjC,SAAO,IAAIhE,OAAJ,CAAY,WAAWzB,OAAX,EAAoB;AACrC,UAAMlB,GAAG,GAAG+G,UAAU,CAACpD,UAAD,CAAtB;AACA,UAAM2C,MAAM,GAAG,IAAIU,MAAJ,CAAWrD,UAAX,EAAuB3D,GAAvB,EAA4B2G,KAA5B,CAAf;AACA,QAAInF,MAAM,GAAGN,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,CAAb;;AACA,QAAI,CAACnC,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,IAAIuB,MAAJ,CAAW7B,OAAX,EAAoByC,UAApB,EAAgC,IAAIX,GAAJ,EAAhC,CAAT;AACA9B,MAAAA,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,IAA8BnC,MAA9B;AACD;;AACDA,IAAAA,MAAM,CAACS,GAAP,CAAWqE,MAAM,CAACtG,GAAlB,EAAuBsG,MAAvB;AACA,UAAMW,KAAK,GAAG;AAAEX,MAAAA,MAAF;AAAUY,MAAAA,IAAI,EAAE,QAAhB;AAA0B1F,MAAAA,MAAM,EAAEA,MAAM,CAACR;AAAzC,KAAd;AACAQ,IAAAA,MAAM,CAACE,QAAP,CAAgByF,MAAhB,CAAuBF,KAAvB;AACA/F,IAAAA,OAAO,CAACQ,QAAR,CAAiByF,MAAjB,CAAwBF,KAAxB;AACAG,IAAAA,WAAW,CAAClG,OAAD,EAAUoF,MAAV,CAAX;AACApD,IAAAA,YAAY,CAAChC,OAAD,CAAZ;AACA,WAAOoF,MAAP;AACD,GAfM,CAAP;AAgBD;;AAED,SAASc,WAAT,CAAqBlG,OAArB,EAA8BoF,MAA9B,EAAsC;AACpCnD,EAAAA,SAAS,CAACjC,OAAD,EAAU,CACjB,KADiB,EAEjB,MAAMoF,MAAM,CAACtG,GAFI,EAGjB,MAAMqH,IAAI,CAACC,SAAL,CAAehB,MAAM,CAACiB,MAAtB,CAHW,CAAV,CAAT;AAKD;;AAED,SAASb,MAAT,CAAgBJ,MAAhB,EAAwBK,KAAxB,EAA+B;AAC7B,SAAO,IAAIhE,OAAJ,CAAY,UAAUzB,OAAV,EAAmB;AACpC,UAAMsG,SAAS,GAAGpE,MAAM,CAAC9C,OAAP,CAAeqG,KAAf,EAAsBc,IAAtB,CAChB,CAAC,CAACzH,GAAD,EAAMG,KAAN,CAAD,KAAkBA,KAAK,KAAKmG,MAAM,CAACtG,GAAD,CADlB,CAAlB;AAGA,QAAI,CAACwH,SAAL,EAAgB;AAChBpE,IAAAA,MAAM,CAACyC,MAAP,CAAcS,MAAM,CAACiB,MAArB,EAA6BZ,KAA7B;AACAvD,IAAAA,MAAM,CAACyC,MAAP,CAAcS,MAAd,EAAsBK,KAAtB;AACA,UAAMM,KAAK,GAAG;AAAEX,MAAAA,MAAF;AAAUY,MAAAA,IAAI,EAAE,QAAhB;AAA0B1F,MAAAA,MAAM,EAAE8E,MAAM,CAACoB;AAAzC,KAAd;;AACAxG,IAAAA,OAAO,CAACE,OAAR,CAAgBkF,MAAM,CAACoB,OAAvB,EAAgChG,QAAhC,CAAyCyF,MAAzC,CAAgDF,KAAhD;;AACA/F,IAAAA,OAAO,CAACQ,QAAR,CAAiByF,MAAjB,CAAwBF,KAAxB;AACAG,IAAAA,WAAW,CAAClG,OAAD,EAAUoF,MAAV,CAAX;AACD,GAXM,CAAP;AAYD;;AAED,SAAS5C,GAAT,CAAaC,UAAb,EAAyBgE,KAAzB,EAAgC;AAC9B,QAAMC,SAAS,GAAG,OAAOD,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsChC,SAAxD;AACA,QAAMkC,UAAU,GAAGD,SAAS,GAAGjC,SAAH,GAAegC,KAA3C;AACA,QAAMG,OAAO,GAAG;AACdnD,IAAAA,aAAa,EAAE;AADD,GAAhB;AAGA,SAAO,IAAIhC,OAAJ,CACJzB,OAAD,IAAa6G,KAAK,CAAC7G,OAAD,EAAUyC,UAAV,EAAsBkE,UAAtB,EAAkCD,SAAlC,CADb,EAELE,OAFK,CAAP;AAID;;AAED,SAASlB,KAAT,CAAejD,UAAf,EAA2B;AACzB,SAAO,IAAIhB,OAAJ,CAAY,WAAWzB,OAAX,EAAoB;AACrC,UAAMM,MAAM,GAAGN,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,CAAf;AACA,WAAOnC,MAAM,GAAGA,MAAM,CAACd,IAAP,CAAYsH,IAAf,GAAsB,CAAnC;AACD,GAHM,CAAP;AAID;;AAED,SAAS1B,MAAT,CAAgB3C,UAAhB,EAA4BgE,KAA5B,EAAmC;AACjC,QAAMC,SAAS,GAAG,OAAOD,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsChC,SAAxD;AACA,QAAMkC,UAAU,GAAGD,SAAS,GAAGjC,SAAH,GAAegC,KAA3C;AACA,QAAMG,OAAO,GAAG;AACdnD,IAAAA,aAAa,EAAE,IADD;AAEdC,IAAAA,SAAS,EAAE,CAFG;;AAGdjE,IAAAA,GAAG,CAAC4B,MAAD,EAAS;AACV,aAAOA,MAAM,CAAC,CAAD,CAAb;AACD;;AALa,GAAhB;AAOA,SAAO,IAAII,OAAJ,CACJzB,OAAD,IAAa6G,KAAK,CAAC7G,OAAD,EAAUyC,UAAV,EAAsBkE,UAAtB,EAAkCD,SAAlC,CADb,EAELE,OAFK,CAAP;AAID;;AAED,SAAS5D,MAAT,GAAkB;AAChB,MAAI,OAAO+D,SAAS,CAAC,CAAD,CAAhB,IAAuB,QAA3B,EAAqC;AACnC,UAAM,CAACtE,UAAD,EAAa,GAAGkE,UAAhB,IAA8BI,SAApC;AACA,WAAO,IAAItF,OAAJ,CAAY,WAAWzB,OAAX,EAAoB;AACrC,YAAMM,MAAM,GAAGN,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,CAAf;AACA,UAAI,CAACnC,MAAL,EAAa;AACb,YAAM0G,WAAW,GAAG,EAApB;;AACA,WAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsH,UAAU,CAACrH,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAM4H,IAAI,GAAGN,UAAU,CAACtH,CAAD,CAAvB;AACA,YAAIP,GAAJ;;AACA,YAAImI,IAAI,YAAYnB,MAApB,EAA4B;AAC1B,cAAImB,IAAI,CAACT,OAAL,KAAiBlG,MAArB,EAA6B;AAC3B,kBAAM,IAAI4G,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACDpI,UAAAA,GAAG,GAAGmI,IAAI,CAACnI,GAAX;AACD,SALD,MAKO;AACLA,UAAAA,GAAG,GAAGmI,IAAN;AACD;;AACD,YAAI3G,MAAM,CAACd,IAAP,CAAY2H,MAAZ,CAAmBrI,GAAnB,CAAJ,EAA6B;AAC3BkI,UAAAA,WAAW,CAAC/D,IAAZ,CAAiBnE,GAAjB;AACD;AACF;;AACD,UAAIkI,WAAW,CAAC1H,MAAhB,EAAwB;AACtB,cAAMyG,KAAK,GAAG;AACZC,UAAAA,IAAI,EAAE,QADM;AAEZ1F,UAAAA,MAAM,EAAEA,MAAM,CAACR,IAFH;AAGZN,UAAAA,IAAI,EAAEwH;AAHM,SAAd;AAKA1G,QAAAA,MAAM,CAACE,QAAP,CAAgByF,MAAhB,CAAuBF,KAAvB;AACA/F,QAAAA,OAAO,CAACQ,QAAR,CAAiByF,MAAjB,CAAwBF,KAAxB;AACA9D,QAAAA,SAAS,CACPjC,OADO,EAEP,GAAGgH,WAAW,CAACvH,GAAZ,CAAiB0F,EAAD,IAAQ,CAAC,QAAD,EAAWiC,0BAA0B,CAACjC,EAAD,CAArC,CAAxB,CAFI,CAAT;AAID;AACF,KAhCM,CAAP;AAiCD;AACF;;AAED,SAASiC,0BAAT,CAAoCjC,EAApC,EAAwC;AACtC,SAAO,MAAMA,EAAb;AACD;;AAED,UAAU0B,KAAV,CAAgB7G,OAAhB,EAAyByC,UAAzB,EAAqCkE,UAArC,EAAiDD,SAAjD,EAA4D;AAC1D,QAAMpG,MAAM,GAAGN,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,CAAf;AACA,MAAI,CAACnC,MAAL,EAAa;AACb,QAAM+G,QAAQ,GAAG,CAACV,UAAD,IAAe,CAACD,SAAjC;AACA,QAAMY,aAAa,GAAG,EAAtB;;AACA,QAAMC,MAAM,GAAInC,MAAD,IACbiC,QAAQ,IACPV,UAAU,IAAIA,UAAU,CAACa,QAAX,CAAoBpC,MAAM,CAACtG,GAA3B,CADf,IAEC4H,SAAS,IAAIA,SAAS,CAACtB,MAAD,CAHzB;;AAIA,OAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiB,MAAM,CAAC2E,WAAP,CAAmB3F,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,UAAM+F,MAAM,GAAG9E,MAAM,CAAC2E,WAAP,CAAmB5F,CAAnB,CAAf;AACAiI,IAAAA,aAAa,CAAClC,MAAM,CAACtG,GAAR,CAAb,GAA4B,IAA5B;;AACA,QAAIyI,MAAM,CAACnC,MAAD,CAAV,EAAoB;AAClB,YAAMA,MAAN;AACD;AACF;;AACD,QAAMqC,YAAY,GAAGlE,KAAK,CAACoC,IAAN,CAAWrF,MAAM,CAACd,IAAlB,EAAwB+H,MAAxB,CAClBpC,EAAD,IAAQ,CAACmC,aAAa,CAACnC,EAAD,CADH,CAArB;;AAGA,MAAIsC,YAAY,CAACnI,MAAjB,EAAyB;AACvB,UAAMoI,YAAY,CAAC1H,OAAD,EAAUyC,UAAV,EAAsBgF,YAAtB,CAAlB;;AACA,SAAK,IAAIpI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoI,YAAY,CAACnI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAM+F,MAAM,GAAG9E,MAAM,CAAC4E,SAAP,CAAiBuC,YAAY,CAACpI,CAAD,CAA7B,CAAf;;AACA,UAAIkI,MAAM,CAACnC,MAAD,CAAV,EAAoB;AAClB,cAAMA,MAAN;AACD;AACF;AACF;AACF;;AAED,eAAesC,YAAf,CAA4B1H,OAA5B,EAAqCyC,UAArC,EAAiDkE,UAAjD,EAA6D;AAC3D,QAAMrG,MAAM,GAAGN,OAAO,CAACE,OAAR,CAAgBuC,UAAhB,CAAf;AACA,MAAI,CAACnC,MAAL,EAAa;AACb,QAAMqH,eAAe,GAAG,EAAxB;AACA,QAAMC,kBAAkB,GAAGjB,UAAU,CAACY,MAAX,CAAmBpC,EAAD,IAAQ;AACnD,QAAI7E,MAAM,CAAC4E,SAAP,CAAiBC,EAAjB,CAAJ,EAA0B;AACxB,aAAO,KAAP;AACD;;AACD,QAAInF,OAAO,CAACG,QAAR,CAAiBgF,EAAjB,CAAJ,EAA0B;AACxBwC,MAAAA,eAAe,CAAC1E,IAAhB,CAAqBjD,OAAO,CAACG,QAAR,CAAiBgF,EAAjB,CAArB;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAT0B,CAA3B;;AAWA,MAAIyC,kBAAkB,CAACtI,MAAvB,EAA+B;AAC7B,UAAMuI,mBAAmB,GAAG7H,OAAO,CAACpB,OAAR,CACzByD,GADyB,CACrBuF,kBADqB,EAEzB3D,IAFyB,CAEnB6D,UAAD,IAAgB;AACpB,WAAK,IAAIzI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuI,kBAAkB,CAACtI,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,cAAM0I,QAAQ,GAAGH,kBAAkB,CAACvI,CAAD,CAAnC;;AACA,YAAI,CAACyI,UAAU,CAACzI,CAAD,CAAf,EAAoB;AAClB,gBAAM,IAAI6H,KAAJ,CAAW,WAAUa,QAAS,iBAA9B,CAAN;AACD;;AACDzH,QAAAA,MAAM,CAACS,GAAP,CACEgH,QADF,EAEE,IAAIjC,MAAJ,CAAWrD,UAAX,EAAuBsF,QAAvB,EAAiC5B,IAAI,CAAC6B,KAAL,CAAWF,UAAU,CAACzI,CAAD,CAArB,CAAjC,CAFF;AAIA,eAAOW,OAAO,CAACG,QAAR,CAAiB4H,QAAjB,CAAP;AACD;AACF,KAdyB,CAA5B;;AAeA,SAAK,IAAI1I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuI,kBAAkB,CAACtI,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClDW,MAAAA,OAAO,CAACG,QAAR,CAAiByH,kBAAkB,CAACvI,CAAD,CAAnC,IAA0CwI,mBAA1C;AACD;;AACDF,IAAAA,eAAe,CAAC1E,IAAhB,CAAqB4E,mBAArB;AACD;;AAED,QAAMnG,OAAO,CAACc,GAAR,CAAYmF,eAAZ,CAAN;AACD;;AAED,SAAS9B,UAAT,CAAoBpD,UAApB,EAAgC;AAC9B,QAAM0C,EAAE,GAAG,CAAC8C,IAAI,CAACC,MAAL,KAAgBC,IAAI,CAACC,GAAL,EAAjB,EAA6BC,QAA7B,CAAsC,EAAtC,CAAX;AACA,QAAMC,SAAS,GAAG7F,UAAU,CAAC8F,MAAX,CAAkB,CAAlB,CAAlB;AACA,QAAMC,QAAQ,GAAG/F,UAAU,CAAC8F,MAAX,CAAkB9F,UAAU,CAACnD,MAAX,GAAoB,CAAtC,CAAjB;AACA,SAAQ,GAAEgJ,SAAU,GAAEnD,EAAG,GAAEqD,QAAS,EAA7B,CAA+BC,OAA/B,CAAuC,IAAvC,EAA6C,EAA7C,CAAP;AACD;;AAED,MAAM3C,MAAN,CAAa;AACXpB,EAAAA,WAAW,CAACpE,MAAD,EAASxB,GAAT,EAAc2G,KAAK,GAAG,EAAtB,EAA0B;AACnCvD,IAAAA,MAAM,CAACwG,gBAAP,CAAwB,IAAxB,EAA8B;AAC5B5J,MAAAA,GAAG,EAAE;AACHG,QAAAA,KAAK,EAAEH,GADJ;AAEH6J,QAAAA,QAAQ,EAAE;AAFP,OADuB;AAK5BnC,MAAAA,OAAO,EAAE;AAAEvH,QAAAA,KAAK,EAAEqB,MAAT;AAAiBqI,QAAAA,QAAQ,EAAE;AAA3B,OALmB;AAM5BtC,MAAAA,MAAM,EAAE;AACNpH,QAAAA,KAAK,EAAEwG;AADD;AANoB,KAA9B;AAUAvD,IAAAA,MAAM,CAACyC,MAAP,CAAc,IAAd,EAAoBc,KAApB;AACD;;AAEDmD,EAAAA,MAAM,GAAG;AACP,WAAO,KAAK9J,GAAZ;AACD;;AAjBU;;AAoBb,OAAO,SAAS2B,iBAAT,GAA6B;AAClC,QAAMoI,SAAS,GAAG,EAAlB;AACA,MAAIC,YAAJ;AACA,MAAIC,gBAAJ;AACA,SAAO;AACLhI,IAAAA,GAAG,CAACiI,QAAD,EAAW;AACZ,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,SAAJ;;AACA,UAAIJ,YAAJ,EAAkB;AAChBI,QAAAA,SAAS,GAAGJ,YAAZ;AACAA,QAAAA,YAAY,CAAC7F,IAAb,CAAkB+F,QAAlB;AACD,OAHD,MAGO;AACLH,QAAAA,SAAS,CAAC5F,IAAV,CAAe+F,QAAf;AACD;;AACD,aAAO,SAAShG,MAAT,GAAkB;AACvB,YAAI,CAACiG,QAAL,EAAe,OADQ,CAGvB;;AACA,YAAIC,SAAS,IAAIA,SAAS,KAAKJ,YAA/B,EAA6C;AAC3C,gBAAMvE,KAAK,GAAG2E,SAAS,CAACC,OAAV,CAAkBH,QAAlB,CAAd;AACAE,UAAAA,SAAS,CAACE,MAAV,CAAiB7E,KAAjB,EAAwB,CAAxB;AACD,SAHD,MAGO,IAAIwE,gBAAJ,EAAsB;AAC3BA,UAAAA,gBAAgB,CAAC9F,IAAjB,CAAsB+F,QAAtB;AACD,SAFM,MAEA;AACL,gBAAMzE,KAAK,GAAGsE,SAAS,CAACM,OAAV,CAAkBH,QAAlB,CAAd;AACAH,UAAAA,SAAS,CAACO,MAAV,CAAiB7E,KAAjB,EAAwB,CAAxB;AACD;;AAED0E,QAAAA,QAAQ,GAAG,KAAX;AACAC,QAAAA,SAAS,GAAGzE,SAAZ;AACAuE,QAAAA,QAAQ,GAAGvE,SAAX;AACD,OAjBD;AAkBD,KA5BI;;AA6BL9E,IAAAA,KAAK,GAAG;AACNkJ,MAAAA,SAAS,CAACvJ,MAAV,GAAmB,CAAnB;AACD,KA/BI;;AAgCL2G,IAAAA,MAAM,CAACF,KAAD,EAAQ;AACZ,UAAI,CAAC8C,SAAS,CAACvJ,MAAf,EAAuB;;AACvB,UAAI;AACFwJ,QAAAA,YAAY,GAAG,EAAf;AACAC,QAAAA,gBAAgB,GAAG,EAAnB;;AACA,aAAK,IAAI1J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwJ,SAAS,CAACvJ,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCwJ,UAAAA,SAAS,CAACxJ,CAAD,CAAT,CAAa0G,KAAb;AACD;AACF,OAND,SAMU;AACR,YAAI+C,YAAY,CAACxJ,MAAjB,EAAyB;AACvBuJ,UAAAA,SAAS,CAAC5F,IAAV,CAAe,GAAG6F,YAAlB;AACD;;AAED,YAAIC,gBAAgB,CAACzJ,MAArB,EAA6B;AAC3B,eAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0J,gBAAgB,CAACzJ,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,kBAAMkF,KAAK,GAAGsE,SAAS,CAACM,OAAV,CAAkBJ,gBAAgB,CAAC1J,CAAD,CAAlC,CAAd;AACAwJ,YAAAA,SAAS,CAACO,MAAV,CAAiB7E,KAAjB,EAAwB,CAAxB;AACD;AACF;;AACDuE,QAAAA,YAAY,CAACxJ,MAAb,GAAsB,CAAtB;AACAwJ,QAAAA,YAAY,GAAGrE,SAAf;AAEAsE,QAAAA,gBAAgB,CAACzJ,MAAjB,GAA0B,CAA1B;AACAyJ,QAAAA,gBAAgB,GAAGtE,SAAnB;AACD;AACF;;AAzDI,GAAP;AA2DD","sourcesContent":["const noop = () => {};\n\nexport const memoryStorage = (function () {\n  let storage = {};\n\n  return {\n    getItem(key, callback) {\n      callback(storage[key]);\n    },\n    setItem(key, value, callback) {\n      storage[key] = value;\n      callback && callback();\n    },\n    removeItem(key, callback) {\n      delete storage[key];\n      callback && callback();\n    },\n    multiSet(entries, callback) {\n      for (let i = 0; i < entries.length; i++) {\n        const [key, value] = entries[i];\n        storage[key] = value;\n      }\n      callback && callback();\n    },\n    multiGet(keys, callback) {\n      return callback(keys.map((key) => storage[key]));\n    },\n    multiRemove(keys, callback) {\n      for (let i = 0; i < keys.length; i++) {\n        delete storage[keys[i]];\n      }\n      callback && callback();\n    },\n    clear() {\n      storage = {};\n    },\n    getAll() {\n      return storage;\n    },\n  };\n})();\n\nexport default function lodat({\n  name = \"\",\n  debounce = 0,\n  storage = memoryStorage,\n} = {}) {\n  const context = {\n    debounce,\n    storage: createStorageWrapper(name, storage),\n    schemas: {},\n    promises: {},\n    executionScopes: 0,\n    writes: [],\n    schema,\n    flush,\n    onChange: createEventSource(),\n    subscribe,\n  };\n\n  function flush() {\n    clearTimeout(context.flushTimerId);\n    return flushWrites(context, true);\n  }\n\n  function subscribe(subscription) {\n    return context.onChange.add(subscription);\n  }\n\n  function exec(generator) {\n    let resolved = false;\n    let promiseResolve;\n    let returnValue;\n\n    function callback(result) {\n      resolved = true;\n      returnValue = result;\n      promiseResolve && promiseResolve(result);\n    }\n\n    handleGenerator({\n      callback,\n      generator: context.schemasReady\n        ? generator\n        : function* () {\n            yield context.__allSchemaLoadingPromise;\n            return yield new Command(generator);\n          },\n      context,\n    });\n\n    if (resolved) return returnValue;\n    return new Promise((resolve) => (promiseResolve = resolve));\n  }\n\n  function schema(name) {\n    let s = context.schemas[name];\n    if (!s) {\n      s = new Schema(context, name, new Set());\n      context.schemas[name] = s;\n    }\n    return s;\n  }\n\n  context.__allSchemaLoadingPromise = loadAllSchemas(context);\n\n  return {\n    exec,\n  };\n}\n\nfunction writeSchemas(context) {\n  writeData(context, [\n    \"set\",\n    \"schemas\",\n    () => Object.keys(context.schemas).join(\"|\"),\n  ]);\n}\n\nasync function loadAllSchemas(context) {\n  const schemaListString = await context.storage.get(\"schemas\");\n  const schemaNames = schemaListString ? schemaListString.split(\"|\") : [];\n  await Promise.all(\n    schemaNames.map((schemaName) => loadSchema(context, schemaName))\n  );\n  context.schemasReady = true;\n}\n\nfunction flushWrites(context, force) {\n  function internalFlush() {\n    if (!context.writes || !context.writes.length) return;\n    const writes = context.writes;\n    const actionsByKey = {};\n    for (let i = 0; i < writes.length; i++) {\n      const [action, key, value] = writes[i];\n      actionsByKey[key] = [action, key, value];\n    }\n    const set = [];\n    const remove = [];\n    const keys = Object.keys(actionsByKey);\n    for (let i = 0; i < keys.length; i++) {\n      const [action, key, value] = actionsByKey[keys[i]];\n      if (action === \"set\") {\n        set.push([key, typeof value === \"function\" ? value() : value]);\n      } else {\n        remove.push(key);\n      }\n    }\n    context.storage.set(set);\n    context.storage.remove(remove);\n    writes.length = 0;\n  }\n\n  if (force || !context.debounce) {\n    internalFlush();\n  } else {\n    clearTimeout(context.flushTimerId);\n    context.flushTimerId = setTimeout(internalFlush, context.debounce);\n  }\n}\n\nfunction createStorageWrapper(dbName, storage) {\n  const prefix = dbName ? `@ld/${dbName}/` : \"@ld/\";\n  if (storage !== memoryStorage) {\n    // is async storage\n    if (typeof storage.multiMerge === \"function\") {\n      // full api supported\n    }\n    // is local storage\n    else if (!storage.multiSet) {\n      storage = wrapLocalStorage(storage);\n    }\n  }\n\n  return {\n    get(key) {\n      return new Promise((resolve) => {\n        if (Array.isArray(key)) {\n          storage.multiGet(\n            key.map((key) => `${prefix}${key}`),\n            resolve\n          );\n        } else {\n          storage.getItem(`${prefix}${key}`, resolve);\n        }\n      });\n    },\n    remove(key) {\n      return new Promise((resolve) => {\n        if (Array.isArray(key)) {\n          storage.multiRemove(`${prefix}${key}`, resolve);\n        } else {\n          storage.removeItem(`${prefix}${key}`, resolve);\n        }\n      });\n    },\n    set(key, value) {\n      return new Promise((resolve) => {\n        if (Array.isArray(key)) {\n          storage.multiSet(\n            key.map(([key, value]) => [`${prefix}${key}`, value]),\n            resolve\n          );\n        } else {\n          storage.setItem(`${prefix}${key}`, value, resolve);\n        }\n      });\n    },\n  };\n}\n\nfunction wrapLocalStorage(storage) {\n  return {\n    getItem(key, callback) {\n      callback(storage.getItem(key));\n    },\n    setItem(key, value, callback) {\n      storage.setItem(key, value);\n      callback && callback();\n    },\n    removeItem(key, callback) {\n      storage.removeItem(key);\n      callback && callback();\n    },\n    multiSet(entries, callback) {\n      for (let i = 0; i < entries.length; i++) {\n        const [key, value] = entries[i];\n        storage.setItem(key, value);\n      }\n      callback && callback();\n    },\n    multiGet(keys, callback) {\n      return callback(keys.map((key) => storage.getItem(key)));\n    },\n    multiRemove(keys, callback) {\n      for (let i = 0; i < keys.length; i++) {\n        storage.removeItem(keys[i]);\n      }\n      callback && callback();\n    },\n  };\n}\n\nexport function handleGenerator({\n  context,\n  generator,\n  collectValues,\n  callback = noop,\n  maxLength,\n} = {}) {\n  let iterator = generator(context);\n  const values = [];\n  if (typeof iterator === \"function\") {\n    iterator = iterator(context);\n  }\n\n  function next(payload) {\n    try {\n      context.executionScopes++;\n      const result = iterator.next(payload);\n      if (result.done) {\n        return callback(collectValues ? values : result.value);\n      }\n\n      if (isPromiseLike(result.value)) {\n        return result.value.then(next);\n      }\n\n      if (result.value instanceof Command) {\n        const command = result.value;\n        return handleGenerator({\n          context,\n          ...command,\n          callback(result) {\n            return next(command.map ? command.map(result) : result);\n          },\n        });\n      }\n\n      if (Array.isArray(result.value) && result.value[0] instanceof Command) {\n        let doneCount = 0;\n        const results = [];\n        const commands = result.value;\n        commands.forEach((command, index) => {\n          function callback(result) {\n            results[index] = result;\n            doneCount++;\n            if (doneCount >= commands.length) {\n              next(command.map ? command.map(results) : results);\n            }\n          }\n          if (command.fork) {\n            handleGenerator({ context, ...command });\n            callback(undefined);\n          } else {\n            handleGenerator({ context, ...command, callback });\n          }\n        });\n        return;\n      }\n\n      if (collectValues) {\n        values.push(result.value);\n        if (maxLength && values.length >= maxLength) {\n          return callback(values);\n        }\n      }\n\n      return next(result.value);\n    } finally {\n      context.executionScopes--;\n      if (!context.executionScopes) {\n        flushWrites(context);\n      }\n    }\n  }\n\n  if (iterator && typeof iterator.next === \"function\") {\n    return next();\n  }\n  return callback(iterator);\n}\n\nexport class Command {\n  constructor(generator, { fork, collectValues, maxLength, map } = {}) {\n    Object.assign(this, { generator, fork, collectValues, maxLength, map });\n  }\n}\n\nfunction isPromiseLike(obj) {\n  return obj && typeof obj.then === \"function\";\n}\n\nfunction exist(schemaName, key) {\n  return new Command(function* (context) {\n    const schema = context.schemas[schemaName];\n    if (!schema) return false;\n    return schema.keys.has(key);\n  });\n}\n\nasync function loadSchema(context, schemaName) {\n  const idListString = await context.storage.get(schemaName + \"/0\");\n  const schema = new Schema(\n    context,\n    schemaName,\n    new Set(idListString ? idListString.split(\"|\") : [])\n  );\n  context.schemas[schemaName] = schema;\n  delete context.promises[schemaName];\n  writeSchemas(context);\n  return schema;\n}\n\nclass Schema {\n  constructor(context, name, Keys) {\n    this.context = context;\n    this.name = name;\n    this.keys = Keys;\n    this.entityArray = [];\n    this.entityMap = {};\n    this.onChange = createEventSource();\n  }\n\n  subscribe(subscription) {\n    return this.onChange.add(subscription);\n  }\n\n  add(id, entity) {\n    this.keys.add(id);\n    this.entityArray.push(entity);\n    this.entityMap[id] = entity;\n    writeSchema(this.context, this);\n  }\n\n  create(...args) {\n    return create(this.name, ...args);\n  }\n\n  remove(...args) {\n    return remove(this.name, ...args);\n  }\n\n  update(entity, props) {\n    return update(entity, props);\n  }\n\n  all(...args) {\n    return all(this.name, ...args);\n  }\n\n  get(...args) {\n    return entity(this.name, ...args);\n  }\n\n  count(...args) {\n    return count(this.name, ...args);\n  }\n\n  exist(...args) {\n    return exist(this.name, ...args);\n  }\n}\n\nfunction writeSchema(context, schema) {\n  writeData(context, [\n    \"set\",\n    schema.name + \"/0\",\n    () => Array.from(schema.keys).join(\"|\"),\n  ]);\n}\n\nfunction writeData(context, ...actions) {\n  context.writes.push(...actions);\n  if (!context.executionScopes) {\n    flushWrites(context);\n  }\n}\n\nfunction create(schemaName, props) {\n  return new Command(function* (context) {\n    const key = generateId(schemaName);\n    const entity = new Entity(schemaName, key, props);\n    let schema = context.schemas[schemaName];\n    if (!schema) {\n      schema = new Schema(context, schemaName, new Set());\n      context.schemas[schemaName] = schema;\n    }\n    schema.add(entity.key, entity);\n    const event = { entity, type: \"create\", schema: schema.name };\n    schema.onChange.notify(event);\n    context.onChange.notify(event);\n    writeEntity(context, entity);\n    writeSchemas(context);\n    return entity;\n  });\n}\n\nfunction writeEntity(context, entity) {\n  writeData(context, [\n    \"set\",\n    \"#\" + entity.key,\n    () => JSON.stringify(entity._props),\n  ]);\n}\n\nfunction update(entity, props) {\n  return new Command(function (context) {\n    const hasChange = Object.entries(props).some(\n      ([key, value]) => value !== entity[key]\n    );\n    if (!hasChange) return;\n    Object.assign(entity._props, props);\n    Object.assign(entity, props);\n    const event = { entity, type: \"update\", schema: entity._schema };\n    context.schemas[entity._schema].onChange.notify(event);\n    context.onChange.notify(event);\n    writeEntity(context, entity);\n  });\n}\n\nfunction all(schemaName, input) {\n  const predicate = typeof input === \"function\" ? input : undefined;\n  const entityKeys = predicate ? undefined : input;\n  const options = {\n    collectValues: true,\n  };\n  return new Command(\n    (context) => query(context, schemaName, entityKeys, predicate),\n    options\n  );\n}\n\nfunction count(schemaName) {\n  return new Command(function* (context) {\n    const schema = context.schemas[schemaName];\n    return schema ? schema.keys.size : 0;\n  });\n}\n\nfunction entity(schemaName, input) {\n  const predicate = typeof input === \"function\" ? input : undefined;\n  const entityKeys = predicate ? undefined : input;\n  const options = {\n    collectValues: true,\n    maxLength: 1,\n    map(result) {\n      return result[0];\n    },\n  };\n  return new Command(\n    (context) => query(context, schemaName, entityKeys, predicate),\n    options\n  );\n}\n\nfunction remove() {\n  if (typeof arguments[0] == \"string\") {\n    const [schemaName, ...entityKeys] = arguments;\n    return new Command(function* (context) {\n      const schema = context.schemas[schemaName];\n      if (!schema) return;\n      const removedKeys = [];\n      for (let i = 0; i < entityKeys.length; i++) {\n        const item = entityKeys[i];\n        let key;\n        if (item instanceof Entity) {\n          if (item._schema !== schema) {\n            throw new Error(\"Invalid schema\");\n          }\n          key = item.key;\n        } else {\n          key = item;\n        }\n        if (schema.keys.delete(key)) {\n          removedKeys.push(key);\n        }\n      }\n      if (removedKeys.length) {\n        const event = {\n          type: \"remove\",\n          schema: schema.name,\n          keys: removedKeys,\n        };\n        schema.onChange.notify(event);\n        context.onChange.notify(event);\n        writeData(\n          context,\n          ...removedKeys.map((id) => [\"remove\", getStorageKeyFromEntityKey(id)])\n        );\n      }\n    });\n  }\n}\n\nfunction getStorageKeyFromEntityKey(id) {\n  return \"#\" + id;\n}\n\nfunction* query(context, schemaName, entityKeys, predicate) {\n  const schema = context.schemas[schemaName];\n  if (!schema) return;\n  const yieldAll = !entityKeys && !predicate;\n  const processedKeys = {};\n  const filter = (entity) =>\n    yieldAll ||\n    (entityKeys && entityKeys.includes(entity.key)) ||\n    (predicate && predicate(entity));\n  for (let i = 0; i < schema.entityArray.length; i++) {\n    const entity = schema.entityArray[i];\n    processedKeys[entity.key] = true;\n    if (filter(entity)) {\n      yield entity;\n    }\n  }\n  const unloadedKeys = Array.from(schema.keys).filter(\n    (id) => !processedKeys[id]\n  );\n  if (unloadedKeys.length) {\n    yield loadEntities(context, schemaName, unloadedKeys);\n    for (let i = 0; i < unloadedKeys.length; i++) {\n      const entity = schema.entityMap[unloadedKeys[i]];\n      if (filter(entity)) {\n        yield entity;\n      }\n    }\n  }\n}\n\nasync function loadEntities(context, schemaName, entityKeys) {\n  const schema = context.schemas[schemaName];\n  if (!schema) return;\n  const loadingPromises = [];\n  const unloadedEntityKeys = entityKeys.filter((id) => {\n    if (schema.entityMap[id]) {\n      return false;\n    }\n    if (context.promises[id]) {\n      loadingPromises.push(context.promises[id]);\n      return false;\n    }\n    return true;\n  });\n\n  if (unloadedEntityKeys.length) {\n    const loadEntitiesPromise = context.storage\n      .get(unloadedEntityKeys)\n      .then((entityData) => {\n        for (let i = 0; i < unloadedEntityKeys.length; i++) {\n          const entityId = unloadedEntityKeys[i];\n          if (!entityData[i]) {\n            throw new Error(`Entity #${entityId} does not exist`);\n          }\n          schema.add(\n            entityId,\n            new Entity(schemaName, entityId, JSON.parse(entityData[i]))\n          );\n          delete context.promises[entityId];\n        }\n      });\n    for (let i = 0; i < unloadedEntityKeys.length; i++) {\n      context.promises[unloadedEntityKeys[i]] = loadEntitiesPromise;\n    }\n    loadingPromises.push(loadEntitiesPromise);\n  }\n\n  await Promise.all(loadingPromises);\n}\n\nfunction generateId(schemaName) {\n  const id = (Math.random() * Date.now()).toString(36);\n  const firstChar = schemaName.charAt(0);\n  const lastChar = schemaName.charAt(schemaName.length - 1);\n  return `${firstChar}${id}${lastChar}`.replace(/\\./, \"\");\n}\n\nclass Entity {\n  constructor(schema, key, props = {}) {\n    Object.defineProperties(this, {\n      key: {\n        value: key,\n        writable: false,\n      },\n      _schema: { value: schema, writable: false },\n      _props: {\n        value: props,\n      },\n    });\n    Object.assign(this, props);\n  }\n\n  toJSON() {\n    return this.key;\n  }\n}\n\nexport function createEventSource() {\n  const listeners = [];\n  let newListeners;\n  let removedListeners;\n  return {\n    add(listener) {\n      let isActive = true;\n      let container;\n      if (newListeners) {\n        container = newListeners;\n        newListeners.push(listener);\n      } else {\n        listeners.push(listener);\n      }\n      return function remove() {\n        if (!isActive) return;\n\n        // still in notifying progress\n        if (container && container === newListeners) {\n          const index = container.indexOf(listener);\n          container.splice(index, 1);\n        } else if (removedListeners) {\n          removedListeners.push(listener);\n        } else {\n          const index = listeners.indexOf(listener);\n          listeners.splice(index, 1);\n        }\n\n        isActive = false;\n        container = undefined;\n        listener = undefined;\n      };\n    },\n    clear() {\n      listeners.length = 0;\n    },\n    notify(event) {\n      if (!listeners.length) return;\n      try {\n        newListeners = [];\n        removedListeners = [];\n        for (let i = 0; i < listeners.length; i++) {\n          listeners[i](event);\n        }\n      } finally {\n        if (newListeners.length) {\n          listeners.push(...newListeners);\n        }\n\n        if (removedListeners.length) {\n          for (let i = 0; i < removedListeners.length; i++) {\n            const index = listeners.indexOf(removedListeners[i]);\n            listeners.splice(index, 1);\n          }\n        }\n        newListeners.length = 0;\n        newListeners = undefined;\n\n        removedListeners.length = 0;\n        removedListeners = undefined;\n      }\n    },\n  };\n}\n"],"file":"index.js"}